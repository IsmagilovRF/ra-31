{"version":3,"sources":["components/HexInput.jsx","components/Container.jsx","App.js","reportWebVitals.js","index.js"],"names":["HexInput","props","value","onChange","e","currentTarget","maxLength","type","className","placeholder","Container","state","isWarning","color","result","convert","hex","exec","shift","map","i","parseInt","join","test","slice","length","this","setState","prevState","checkColor","fixColor","style","backgroundColor","change","bind","React","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wPAmBeA,EAjBE,SAAAC,GAKf,OACE,uBACEC,MAAOD,EAAMC,MACbC,SAPJ,SAAkBC,GAChBH,EAAME,SAASC,EAAEC,cAAcH,QAO7BI,UAAW,EACXC,KAAK,OACLC,UAAU,yBACVC,YAAY,aC2DHC,E,kDArEb,WAAYT,GAAQ,IAAD,8BACjB,cAAMA,IACDU,MAAQ,CACXC,WAAW,EACXC,MAAOZ,EAAMY,MACbC,OAAQ,EAAKC,QAAQd,EAAMY,QALZ,E,2CASnB,SAAQG,GACN,IAAIF,EAAS,4CAA4CG,KAAKD,GAC9D,OAAKF,GAGLA,EAAOI,QACAJ,EAAM,cACFA,EAAOK,KAAI,SAAAC,GAAC,OAAIC,SAASD,EAAG,OAAKE,KAAK,MADpC,KAET,MALK,O,wBAQX,SAAWT,GACT,MAAO,oBAAoBU,KAAKV,K,sBAGlC,SAASA,GACP,MAAoB,MAAbA,EAAM,GAAaA,EAAMW,MAAM,EAAG,GAAlC,WAA2CX,EAAMW,MAAM,EAAG,M,oBAGnE,SAAOX,GACgB,IAAjBA,EAAMY,OACRC,KAAKC,UAAS,SAAAC,GAAS,MAAK,CAC1Bf,QACAD,UAAWgB,EAAUhB,UACrBE,OAAQc,EAAUd,WAEXY,KAAKG,WAAWhB,IACzBA,EAAQa,KAAKI,SAASjB,GACtBa,KAAKC,SAAS,CACZd,QACAD,WAAW,EACXE,OAAQY,KAAKX,QAAQF,MAGvBa,KAAKC,SAAS,CACZf,WAAW,EACXC,MAAOa,KAAKI,SAASjB,GACrBC,OAAQ,4C,oBAKd,WACE,IAAMb,EAAQ,GAQd,OAPIyB,KAAKf,MAAMC,UACbX,EAAMO,UAAY,UAElBP,EAAM8B,MAAQ,CACZC,gBAAiBN,KAAKf,MAAMG,QAI9B,mDAAYb,GAAZ,cACE,cAAC,EAAD,CAAUC,MAAOwB,KAAKf,MAAME,MAAOV,SAAUuB,KAAKO,OAAOC,KAAKR,QAC9D,qBAAKlB,UAAU,qBAAf,SAAqCkB,KAAKf,MAAMG,iB,GAhEhCqB,IAAMC,W,MCUfC,MATf,WACE,OACE,sBAAK7B,UAAU,MAAf,UACA,cAAC,EAAD,CAAWK,MAAM,YACjB,gDCIWyB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.1c2c4708.chunk.js","sourcesContent":["import React from 'react';\n\nconst HexInput = props => {\n  function onChange(e) {\n    props.onChange(e.currentTarget.value);\n  }\n\n  return (\n    <input\n      value={props.value}\n      onChange={onChange}\n      maxLength={7}\n      type=\"text\"\n      className=\"hex-field js-hex-field\"\n      placeholder=\"#000000\"\n    />\n  );\n};\n\nexport default HexInput;\n","import React from \"react\";\nimport HexInput from \"./HexInput\";\n\nclass Container extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isWarning: false,\n      color: props.color,\n      result: this.convert(props.color)\n    };\n  }\n\n  convert(hex) {\n    let result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    if (!result) {\n      return null;\n    }\n    result.shift();\n    return result\n      ? `rgb(${result.map(i => parseInt(i, 16)).join(\", \")})`\n      : null;\n  }\n\n  checkColor(color) {\n    return /^#?([\\da-f]{6})$/i.test(color);\n  }\n\n  fixColor(color) {\n    return color[0] === \"#\" ? color.slice(0, 7) : `#${color.slice(0, 6)}`;\n  }\n\n  change(color) {\n    if (color.length !== 7) {\n      this.setState(prevState => ({\n        color,\n        isWarning: prevState.isWarning,\n        result: prevState.result\n      }));\n    } else if (this.checkColor(color)) {\n      color = this.fixColor(color);\n      this.setState({\n        color,\n        isWarning: false,\n        result: this.convert(color)\n      });\n    } else {\n      this.setState({\n        isWarning: true,\n        color: this.fixColor(color),\n        result: \"Ошибка!\"\n      });\n    }\n  }\n\n  render() {\n    const props = {};\n    if (this.state.isWarning) {\n      props.className = \"warning\";\n    } else {\n      props.style = {\n        backgroundColor: this.state.result\n      };\n    }\n    return (\n      <figure {...props}>\n        <HexInput value={this.state.color} onChange={this.change.bind(this)} />\n        <div className=\"message js-message\">{this.state.result}</div>\n      </figure>\n    );\n  }\n}\n\nexport default Container;\n","import React from 'react';\nimport Container from './components/Container';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n    <Container color=\"#129067\" />\n    <p>learn react</p>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}